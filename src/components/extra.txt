<div>
<Route
  path="/"
  element={
    isAuthenticated ? (
      <>
        <h1 className="title">Image Organizer</h1>
        <ImageUpload />
        {/* Decorative background elements */}
        <div className="decorative-circle circle-1"></div>
        <div className="decorative-circle circle-2"></div>
        {[...Array(10)].map((_, i) => (
          <div
            key={i}
            className="particle"
            style={{
              width: `${Math.random() * 10 + 5}px`,
              height: `${Math.random() * 10 + 5}px`,
              top: `${Math.random() * 100}vh`,
              left: `${Math.random() * 100}vw`,
              animationDelay: `${Math.random() * 5}s`,
            }}
          ></div>
        ))}
      </>
    ) : (
      <Navigate to="/login" replace />
    )
  }
  />
</div>



 reader.onloadend = () => setPreview(reader.result);
    reader.readAsDataURL(file);

    setImage(file);
  };

  const generateTags = async () => {
    if (!image || !model) return;

    const img = document.createElement("img");
    img.src = preview;
    img.onload = async () => {
      const predictions = await model.classify(img);
      setTags(predictions.map((p) => p.className));
    };